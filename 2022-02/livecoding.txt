1 (SQL)
Пусть дана таблица inventory, в которой содержатся данные на каждый день об остатках по товарам на
складе на конец дня.

PK  inventory
x   good_id int
x   inventory_dt date
    inventory_cnt int

good_id inventory_dt inventory_cnt
1       01.11.2019      1000
1       02.11.2019      1000
1       03.11.2019      500 
2       02.11.2019      300
2       03.11.2019      0

Требуется написать sql-запрос, который переведет эти данные в ненулевые движения по товарам (то есть
приход\уход товара) за каждый день.

select * 
from (
    select 
        good_id, inventory_dt,
        (inventory_cnt - coalesce(lag(inventory_cnt) over (partition by good_id order by inventory_dt), inventory_cnt)) as delta
		-- или coalesce(..., 0) какая начальная строчка будет правильной?
    from inventory i
) ii
where delta != 0
;

""" 
2 (SQL)
Убрать лидирующие 0:
'000001'
'000100'
'001230'
'012300'

-- можно так
SELECT (a::int)::text

а если на входе:
'000001'
'000100'
'001230'
'012300'
'00S1230'

-- можно попробовать что-то типа:
susbstring(a from ... '[0-9]+$' ...)
-- вот тут недоразобрался...

-- а правильно будет как-то так:
regexp_replace(a, '^0+', '')

3 (Python)
На вход программе подаётся список элементов 'black', 'blue', 'green', 'grey', 'red', 'rose' в
случайном порядке. Необходимо вывести элементы в порядке RGB (сначала все слова на букву R, затем
G и B). При этом, каждый набор элементов R, G и B должен быть упорядочен по алфавиту.

Пример:
stdin 'red', 'black', 'blue', 'blue', 'grey', 'green', 'black', 'blue', 'rose'
stdout 'red', 'rose', 'green', 'grey', 'black', 'black', 'blue', 'blue', 'blue'

def RGB(colors):
    
    r = []
    g = []
    b = []
    
    for c in colors:
        if c[0] = 'r':
            r.append(c)
        elif c[0] = 'g':
            g.append(c)
        else:
            b.append(c)
    
    r = r.sorted()
    g = g.sorted()
    b = b.sorted()
    
    return r + g + b
    

print(RGB(colors))

4 (Анализ)
Время работы магазинов

Есть справочник магазинов (упростим его до id магазина, Время начала работы, Время окончания работы). 
Спускается приказ об изменении времени работы магазина на время локдауна, например, с 10:00 до 18:00. 
Процессы зависящие от времени работы магазина начали сбоить (время в картах, логистика, оплата труда). 
Какие данные нам помогут проверить время работы магазинов и как напишем проверку. 
"""

- Данные 1
- Данные 2
- ...

# а до этого и не дошли...
